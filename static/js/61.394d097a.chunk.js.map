{"version":3,"file":"static/js/61.394d097a.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.tsx","webpack://samurai-way/./src/components/Profile/Profile.module.scss?4008","webpack://samurai-way/./src/components/Profile/ProfilInfo/ProfileInfo.module.scss?ed48","webpack://samurai-way/./src/components/Profile/ProfilInfo/ProfileStatus.module.scss?f997","components/Profile/ProfilInfo/ProfileStatusWithHook.tsx","components/Profile/ProfilInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPost/Post/Post.module.scss?1a30","assets/images/like-svgrepo-com.svg","components/Profile/MyPost/Post/Post.tsx","webpack://samurai-way/./src/components/Profile/MyPost/MyPost.module.scss?7c3e","components/Profile/MyPost/MyPost.tsx","components/Profile/MyPost/MyPostContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport type mapStatePropsTypeForRedirect = {\r\n    isAuth: boolean\r\n}\r\nlet mapStateToPropsForRedirect = (state: AppRootStateType): mapStatePropsTypeForRedirect => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nfunction WithAuthRedirect<T>(Component: React.ComponentType<T>) {\r\n    function RedirectComponent(props: mapStatePropsTypeForRedirect) {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponentHOC = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponentHOC\r\n};\r\n\r\nexport default WithAuthRedirect;","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__FfeoP\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__1pPH1\",\"profileImg\":\"ProfileInfo_profileImg__HEvyJ\",\"userPhotoBlock\":\"ProfileInfo_userPhotoBlock__k-WaM\",\"someUserPhotos\":\"ProfileInfo_someUserPhotos__krY67\",\"usersDataAndStatus\":\"ProfileInfo_usersDataAndStatus__Gn5d2\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusContainer\":\"ProfileStatus_statusContainer__LPSbH\",\"statusForChange\":\"ProfileStatus_statusForChange__KMbf1\",\"inputForChangeStatus\":\"ProfileStatus_inputForChangeStatus__NLhrn\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './ProfileStatus.module.scss'\r\n\r\n\r\nexport type ProfileStatusPropsType = {\r\n    status: string\r\n    updatedStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHook = (props: ProfileStatusPropsType) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activatedEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivatedEditMode = () => {\r\n        setEditMode(false)\r\n        props.updatedStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className={s.statusContainer}>\r\n            {!editMode &&\r\n            <div className={s.statusForChange}>\r\n                <h4 onDoubleClick={activatedEditMode}>{props.status || \"-------\"}</h4>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div className={s.inputForChangeStatus}>\r\n                <input onChange={onStatusChange} value={status} autoFocus={true} onBlur={deActivatedEditMode}/>\r\n            </div>\r\n            }\r\n            <span>change status</span>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default ProfileStatusWithHook;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.scss'\r\nimport Preloader from \"../../../common/preloader/Preloader\";\r\nimport {ProfilyType} from \"../../../redux/Profile_Page_reduser\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\nimport profileImg from '../../../assets/images/timeline-1.jpg'\r\nimport userImage from '../../../assets/images/OIP.jpeg'\r\n\r\nconst imgOfProfile = {\r\n    backgroundImage: `url(${profileImg})`\r\n}\r\ntype ProfileInfoPropsType = {\r\n    profile: null | ProfilyType\r\n    status:string\r\n    updatedStatus:(status:string)=>void\r\n}\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const contacts = Object.values(props.profile.contacts)\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.profileImg} style={imgOfProfile}></div>\r\n\r\n            <div className={s.userPhotoBlock}>\r\n                <img className={s.someUserPhotos} src={props.profile.photos.large||userImage}/>\r\n            </div>\r\n            <div className={s.usersDataAndStatus}>\r\n                <div>{props.profile.aboutMe}\r\n                   <h3>\r\n                       {props.profile.fullName}\r\n                   </h3>\r\n                </div>\r\n                <ul>\r\n\r\n                    <li>\r\n                        {props.profile.contacts.vk}\r\n                    </li>\r\n                </ul>\r\n                <ProfileStatusWithHook status={props.status} updatedStatus={props.updatedStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__rBHgn\",\"postsText\":\"Post_postsText__wPk1B\",\"svgIkonAndLikes\":\"Post_svgIkonAndLikes__s7f8l\"};","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLikeSvgrepoCom(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"17px\",\n    height: \"17px\",\n    id: \"likes\",\n    viewBox: \"0 -0.5 1025 1025\",\n    className: \"icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M512.8 977.4c-26.1 0-50.1-7.3-71.5-21.7C323.5 897 0 675.3 0 400.5 0 212 153.4 58.6 341.9 58.6c60.5 0 119 15.8 170.9 45.9 51.9-30.1 110.5-45.9 170.9-45.9 188.5 0 341.9 153.4 341.9 341.9 0 274.8-323.5 496.6-441.3 555.2-21.4 14.4-45.4 21.7-71.5 21.7zM341.9 144.1c-141.4 0-256.4 115-256.4 256.4 0 117.2 80.6 225.2 148.2 295.1 86.1 89 187.5 155.2 248.1 184.8l6.1 3.7c15.1 10.8 34.6 10.8 49.7 0l6.1-3.7C604.4 850.7 705.8 784.6 791.8 695.6c67.6-69.9 148.2-177.8 148.2-295.1 0-141.4-115-256.4-256.4-256.4-52.6 0-103.2 16-146.5 46.1L512.8 207.3l-24.5-17.1c-43.2-30.2-93.9-46.1-146.4-46.1z\",\n    fill: \"#3688FF\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLikeSvgrepoCom);\nexport default __webpack_public_path__ + \"static/media/like-svgrepo-com.665730c3ecbf9155760946fb2d3104e8.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport s from \"./Post.module.scss\";\r\nimport likesImg from '../../../../assets/images/like-svgrepo-com.svg'\r\n\r\nimport navSvg from '../../../../assets/images/forNav/user-heart-rounded-svgrepo-com.svg'\r\n\r\nconst imgOfProfile = {\r\n    backgroundImage: `url(${likesImg})`\r\n}\r\n\r\nexport type PostPropsType = {\r\n    message: string\r\n    likes: number\r\n}\r\nconst Post = (props: PostPropsType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src={'https://th.bing.com/th/id/OIP.iyrBrw7GY8DPoRRRyMvemAHaJO?w=133&h=180&c=7&r=0&o=5&dpr=1.3&pid=1.7'}\r\n                alt={'logo'}/>\r\n            <div className={s.postsText}>\r\n                {props.message}\r\n            </div>\r\n\r\n            <div className={s.svgIkonAndLikes}>\r\n                <svg className={s.svgIcon}>\r\n                    <use href={`${navSvg}#likes`}/>\r\n                </svg>\r\n                <span >:{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"myPostContainer\":\"MyPost_myPostContainer__Aci7W\",\"submitForm\":\"MyPost_submitForm__jlxen\"};","import React from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport s from './MyPost.module.scss'\r\nimport {MyPostType} from \"./MyPostContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLenghtCreator, required} from \"../../../utils/validators/index.\";\r\nimport {Textarea} from \"../../../common/FormsControl/FormControl\";\r\n\r\ntype FormDataType = {\r\n    newMyPostText: string\r\n}\r\nconst maxLength10 = maxLenghtCreator(10);\r\n\r\nconst MyPost = React.memo((props: MyPostType) => {\r\n    let postsElement = props.posts.map(p => <Post message={p.message} key={p.id} likes={p.likes}/>)\r\n    const onAddPost = (values: FormDataType) => {\r\n        props.addPost(values.newMyPostText)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPostContainer}>\r\n            <h3>\r\n                My Post\r\n            </h3>\r\n            <MyPostFormRedux onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsElement}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\nexport const AddNewPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return <div className={s.submitForm}>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'newMyPostText'}\r\n                   validate={[required, maxLength10]}/>\r\n            <button>add post</button>\r\n        </form>\r\n    </div>\r\n\r\n}\r\nconst MyPostFormRedux = reduxForm<FormDataType>({\r\n    form: 'ProfileAddPostForm'\r\n})(AddNewPostForm)\r\nexport default MyPost;","import React from 'react';\r\nimport s from 'src/components/Profile/MyPost/MyPost.module.scss'\r\nimport { PostsType,} from \"../../../redux/store\";\r\nimport {addPostAC} from \"../../../redux/Profile_Page_reduser\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype mapToMyPostContainerType = {\r\n    posts: PostsType[]\r\n\r\n}\r\ntype mapToMyDispatchType = {\r\n    addPost: (newMyPostText:string) => void\r\n\r\n}\r\nexport type MyPostType = mapToMyPostContainerType & mapToMyDispatchType\r\nconst mapToMyPostContainer = (state: AppRootStateType): mapToMyPostContainerType => {\r\n    return {\r\n        posts: state.profilePages.posts\r\n    }\r\n}\r\n\r\nconst mapToMyDispatch = (dispatch: Dispatch): mapToMyDispatchType => {\r\n    return {\r\n        addPost: (newMyPostText:string) => {\r\n            dispatch(addPostAC(newMyPostText))\r\n        },\r\n    }\r\n\r\n}\r\nconst MyPostContainer = connect(mapToMyPostContainer, mapToMyDispatch)(MyPost)\r\nexport default MyPostContainer;","import React from 'react';\r\nimport s from './Profile.module.scss';\r\nimport ProfileInfo from \"./ProfilInfo/ProfileInfo\";\r\nimport styleContainer from '../../common/style/Container.module.scss'\r\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\r\nimport {ProfilyType} from \"../../redux/Profile_Page_reduser\";\r\n\r\ntype ProfileTypes={\r\nprofile: null|ProfilyType\r\n    status:string\r\n    updatedStatus:(status:string)=>void\r\n}\r\nconst Profile = (props:ProfileTypes) => {\r\n    return (\r\n        <div className={`${styleContainer.container} ${s.profile}`}>\r\n          <ProfileInfo profile={props.profile} status={props.status} updatedStatus={props.updatedStatus}/>\r\n            <MyPostContainer />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from 'src/components/Profile/Profile.module.scss';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {ProfilyType, getUsersProfile, getStatus, updatedStatus} from \"../../redux/Profile_Page_reduser\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\n\r\nimport WithAuthRedirect from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\ntype PathParamsType = {\r\n    userId?: string\r\n}\r\ntype mapStatePropsType = {\r\n    profile: null | ProfilyType\r\n    status: string\r\n    autorizedUserId: number|null\r\n    isAuth: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUsersProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updatedStatus: (status: string) => void\r\n}\r\ntype OwnPropsType = mapStatePropsType & mapDispatchToPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        let userId = Number(this.props.match.params.userId);\r\n        if (!userId) {\r\n            userId = Number(this.props.autorizedUserId || '')\r\n        }\r\n        if (!userId) {\r\n            this.props.history.push('/login')\r\n        }\r\n        this.props.getUsersProfile(userId)\r\n        this.props.getStatus(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updatedStatus={this.props.updatedStatus}/>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType): mapStatePropsType => ({\r\n    profile: state.profilePages.profile,\r\n    status: state.profilePages.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUsersProfile, getStatus, updatedStatus}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)\r\nlet AuthRedirectComponentHOC = WithAuthRedirect(ProfileContainer)\r\n\r\n\r\n\r\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","Component","connect","props","restProps","to","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updatedStatus","imgOfProfile","backgroundImage","profileImg","profile","Preloader","Object","values","contacts","style","src","photos","large","userImage","aboutMe","fullName","vk","likesImg","alt","message","href","navSvg","likes","maxLength10","maxLenghtCreator","MyPost","React","postsElement","posts","map","p","id","MyPostFormRedux","onSubmit","addPost","newMyPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","profilePages","dispatch","addPostAC","styleContainer","ProfileContainer","userId","Number","this","match","params","autorizedUserId","history","push","getUsersProfile","getStatus","compose","withRouter","WithAuthRedirect"],"sourceRoot":""}